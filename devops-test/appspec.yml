version: 0.0 # 버전지정, doc 에서는 무조건 0.0 을 쓰라고함 (그외 언급 X)
os: linux
files: # 인스턴스에 복사해야 하는 파일의 이름을 지정
  - source: / # CodeDeploy에서 전달해 준 파일 중 destination 으로 이동시킬 대상을 지정, 루트경로(/)로 지정하면 전체파일의 의미
    destination: /home/ubuntu/app/test/main-test/zip # source 에서 지정된 파일을 받을 위치, 이후 jar 를 실행하는 것은 destination에서 옮긴 파일들로 진행
    overwrite: true # 기존에 파일이 있으면 덮어쓸지를 결정, yes -> 파일들을 덮어쓴다.( ec2에는 배포버전을 나둘 필요가 없다, 이미 s3 에서 전부 가지고 있기 떄문에)

permissions: # CodeDeploy에서 EC2서버로 넘겨준 파일들을 모두 ubuntu user 권한을 갖도록 한다.
  - object: /
    pattern: "**"
    owner: ubuntu
    group: ubuntu

hooks: # CodeDeploy 배포단계에서 실행할 명령어 지정, codedeploy 가 zip 안에 들어있는 파일 (특히 .sh, 스크립트) 을 실행하기 시작한다.
  BeforeInstall: # 기존 s3로 부터 받은 폴더를 삭제합니다.
    - location: beforeInstall.sh
      timeout: 60
      runas: ubuntu
  ApplicationStart: # ApplicationStart 배포단계에서 deploy.sh 를 ec2-user 권한으로 실행하게 함,
    - location: deploy.sh
      timeout: 60 # 60으로 스크립트 실행 60초 이상 수행되면 실패가 되도록 함(무한정 기다릴 수 없으니 시간제한을 둬야만 한다.)
      runas: ubuntu
#  ValidateService:
#    - location: health.sh
#      timeout: 60
#      runas: ubuntu